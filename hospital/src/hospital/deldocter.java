package hospital;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Abhishek
 */
public class deldocter extends javax.swing.JFrame {

    /**
     * Creates new form deldocter
     */
    public deldocter() {
        initComponents();
        run();
        docterlist();
        treartmentlist();
        
    }
    public Connection getConnection(){
    Connection con=null;
        try {
         con=(Connection) DriverManager.getConnection("jdbc:sqlite:pp.db");
            
            return con;
        } catch (SQLException ex) {
            Logger.getLogger(hospial2.class.getName()).log(Level.SEVERE, null, ex);
           
            return con;
        }
        
}
public void docterlist(){
     Statement stat=null;
        ResultSet rs=null;
         Connection con = getConnection();
    try{
       
       
        stat = con.createStatement();
                    String selectquery = "select name from docterinfo";
         rs = stat.executeQuery(selectquery);
        while(rs.next()){
            txtdoct.addItem(rs.getString("name"));
        }
    }catch(Exception e){
         JOptionPane.showMessageDialog(null, e.getMessage());
    }finally{
        try{
            stat.close();
            rs.close();
            con.close();
        }catch(Exception e){
            
        }
    }
}
public void  retrieve() throws SQLException{
    DefaultComboBoxModel dcm = new hospial2().dd();
    txtdoct.setModel(dcm);
}
public void  treatment() throws SQLException{
    DefaultComboBoxModel dcm = new hospial2().tt();
    tat1.setModel(dcm);
}
 public DefaultComboBoxModel tt()
{
    DefaultComboBoxModel dmmm = new DefaultComboBoxModel();
    String query = "SELECT * FROM treatment";
    Statement st = null;
    Connection con = getConnection();
            ResultSet rs = null;
            
        try {
            
            st = con.createStatement();
            rs = st.executeQuery(query);
            String treatment;
            
            while(rs.next())
            {
                
               treatment = rs.getString(2);
               dmmm.addElement(treatment);
            }
            return dmmm;
           
           
        } catch (SQLException ex) {
            Logger.getLogger(hospial2.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        finally{
            try{
                rs.close();
                st.close();
                con.close();
            }catch(Exception e){
                
            }
        }
}
 public DefaultComboBoxModel dd()
{
    DefaultComboBoxModel dmm = new DefaultComboBoxModel();
    String query = "SELECT name FROM docterinfo";
    Statement st = null;
    Connection con = getConnection();
            ResultSet rs = null;
            
        try {
            
            st = con.createStatement();
            rs = st.executeQuery(query);
            String docter1;
            
            while(rs.next())
            {
                
               docter1 = rs.getString(1);
               dmm.addElement(docter1);
            }
            return dmm;
           
           
        } catch (SQLException ex) {
            Logger.getLogger(hospial2.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        finally{
            try{
                rs.close();
                st.close();
                con.close();
            }catch(Exception e){
                
            }
        }
}
public void treartmentlist(){
     Statement stat=null;
        ResultSet rs=null;
         Connection con = getConnection();
    try{
       
       
        stat = con.createStatement();
                    String selectquery = "select* from treatment";
         rs = stat.executeQuery(selectquery);
        while(rs.next()){
            tat1.addItem(rs.getString("treatment"));
        }
    }catch(Exception e){
         JOptionPane.showMessageDialog(null, e.getMessage());
    }finally{
        try{
            stat.close();
            rs.close();
            con.close();
        }catch(Exception e){
            
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtdoct = new javax.swing.JComboBox<>();
        tat1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Docter Name:");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Deleted");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Treatment:");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Deleted");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtdoct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdoctActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtdoct, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tat1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtdoct, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tat1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        Connection con = getConnection();
            PreparedStatement ps=null;
            try {

                ps = con.prepareStatement("DELETE FROM docterinfo WHERE name = ?");
                String id = (txtdoct.getSelectedItem().toString());
               
                ps.setString(1, id);
                ps.executeUpdate();
              
                txtdoct.setSelectedIndex(0);
                JOptionPane.showMessageDialog(null, " Deleted");
retrieve();
            } catch (SQLException ex) {
                Logger.getLogger(hospial2.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, " Not Deleted");
            }finally{
                try{
                    ps.close();
                    con.close();
                }catch(Exception e){

                }
            }

        
    }//GEN-LAST:event_jButton1ActionPerformed
 public void run(){

    JFrame frame = new JFrame();
  this.setTitle("Docter deleted");
 
    this.setIconImage(Toolkit.getDefaultToolkit().getImage("icon.jpg"));
 

}
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  
        Connection con = getConnection();
            PreparedStatement ps=null;
            try {

                ps = con.prepareStatement("DELETE FROM treatment WHERE treatment = ?");
                String idd = (tat1.getSelectedItem().toString());
                
                ps.setString(1, idd);
                ps.executeUpdate();
        
                tat1.setSelectedIndex(0);
                JOptionPane.showMessageDialog(null, " Deleted");
treatment();
            } catch (SQLException ex) {
                Logger.getLogger(hospial2.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, " Not Deleted");
            }finally{
                try{
                    ps.close();
                    con.close();
                }catch(Exception e){

                }
            }

        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtdoctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdoctActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdoctActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(deldocter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(deldocter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(deldocter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(deldocter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new deldocter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<String> tat1;
    private javax.swing.JComboBox<String> txtdoct;
    // End of variables declaration//GEN-END:variables
}
