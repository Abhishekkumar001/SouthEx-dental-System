package hospital;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Abhishek
 */
public class docterinfo extends javax.swing.JFrame {

    /**
     * Creates new form docterinfo
     */
    public docterinfo() {
        initComponents();
        run();
    }
    String Error="";
public Connection getConnection(){
    Connection con=null;
        try {
         con=(Connection) DriverManager.getConnection("jdbc:sqlite:pp.db");
            
            return con;
        } catch (SQLException ex) {
            Logger.getLogger(hospial2.class.getName()).log(Level.SEVERE, null, ex);
           
            return con;
        }
        
}
 public void run(){

    JFrame frame = new JFrame();
  this.setTitle("Add Docter ");
 
    this.setIconImage(Toolkit.getDefaultToolkit().getImage("icon.jpg"));
 

}
public void clear(){
     doc_name.setText("");
     doc_degree.setText("");
     doc_add.setText("");
                doc_spec.setText("");
}

/*
public boolean spec(){
    String p = "^[a-zA-Z ]{0,40}$";
       
        Pattern patt = Pattern.compile(p);
        Matcher match = patt.matcher(doc_degree.getText());
        if(!match.matches()){
            
            Error="Invalid Specialization";
            return false;
        }else{
            return true;
        }
}
public boolean addDoc(){
     String p = "^[a-zA-Z0-9 ]{0,40}$";
        Pattern patt = Pattern.compile(p);
        Matcher match = patt.matcher(doc_add.getText());
        if(!match.matches()){
            Error="Invalid Address";
            return false;
        }else{
            return true;
        }
}*/
public boolean name(){
    String p = "^[a-zA-Z ]{4,50}$";
       
        Pattern patt = Pattern.compile(p);
        Matcher match = patt.matcher(doc_name.getText()); 
        if(!match.matches()){
            Error="Invalid Name";
        return false;
        }else{
             return true;
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        doc_name = new javax.swing.JTextField();
        doc_degree = new javax.swing.JTextField();
        doc_spec = new javax.swing.JTextField();
        doc_add = new javax.swing.JTextField();
        add_docter = new javax.swing.JButton();
        nmv = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Doctor Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Doctor Degree:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Docter Specialization:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Registration no:");

        doc_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                doc_nameKeyReleased(evt);
            }
        });

        doc_degree.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                doc_degreeKeyReleased(evt);
            }
        });

        doc_spec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                doc_specKeyReleased(evt);
            }
        });

        doc_add.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                doc_addKeyReleased(evt);
            }
        });

        add_docter.setText("Add Docter");
        add_docter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_docterActionPerformed(evt);
            }
        });

        nmv.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doc_degree, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(doc_spec, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(doc_add, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(add_docter, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nmv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(doc_name))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(nmv, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(doc_name, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doc_degree, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doc_spec, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(doc_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(add_docter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add_docterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_docterActionPerformed
       if(doc_name.getText().equals("") ){
           JOptionPane.showMessageDialog(null, "One Or More Field Are Empty");
       }
else{
        if(name()){
            Connection con = getConnection();
            PreparedStatement ps=null;
            try {
                
                ps = con.prepareStatement("INSERT INTO docterinfo(name,docreg,specialization,docdegree)"
                    + "values(?,?,?,?) ");
                ps.setString(1, doc_name.getText());
                ps.setString(2,doc_add.getText());
                ps.setString(3, doc_degree.getText());
                
                ps.setString(4, doc_spec.getText());
               
                
               
                ps.executeUpdate();
              
               clear();

                JOptionPane.showMessageDialog(null, "Add Docter Successfully!");
               

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } finally{
        try{
            ps.close();
            con.close();
        }catch(Exception e){
            
        }
    }
        }else{
            JOptionPane.showMessageDialog(null, Error);
        }
       
                       }
    }//GEN-LAST:event_add_docterActionPerformed

    private void doc_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doc_nameKeyReleased
     
    }//GEN-LAST:event_doc_nameKeyReleased

    private void doc_specKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doc_specKeyReleased
      
    }//GEN-LAST:event_doc_specKeyReleased

    private void doc_degreeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doc_degreeKeyReleased
     
    }//GEN-LAST:event_doc_degreeKeyReleased

    private void doc_addKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doc_addKeyReleased
        
    }//GEN-LAST:event_doc_addKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(docterinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(docterinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(docterinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(docterinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new docterinfo().setVisible(true);
            }
        });
    }
int gatValue;
    private String insertSerial() throws SQLException {
        gen("select max(id)+1 from docterinfo");
       String serial ="A-16"+gatValue;
       System.out.println(serial);
       return serial;
       
    }

    private void gen(String ps) throws SQLException{
         Connection con = getConnection();
         Statement stat=null;
         ResultSet rs =null;
         
         try{
        stat = con.createStatement();
        rs= stat.executeQuery(ps);
        if(rs.next()){
            gatValue=Integer.parseInt(rs.getString(1));
    }
    }catch(Exception e){
        
    }finally{
        try{
           stat.close();
           rs.close();
            con.close();
        }catch(Exception e){
            
        }
    }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_docter;
    private javax.swing.JTextField doc_add;
    private javax.swing.JTextField doc_degree;
    private javax.swing.JTextField doc_name;
    private javax.swing.JTextField doc_spec;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nmv;
    // End of variables declaration//GEN-END:variables
}
